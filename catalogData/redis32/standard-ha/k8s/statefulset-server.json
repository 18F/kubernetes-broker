{
  "apiVersion": "apps/v1beta1",
  "kind": "StatefulSet",
  "metadata": {
    "name": "$idx_and_short_serviceid-server",
    "labels": {
      "org": "$org",
      "space": "$space",
      "catalog_service_id": "$catalog_service_id",
      "catalog_plan_id": "$catalog_plan_id",
      "service_id": "$service_id",
      "idx_and_short_serviceid": "$idx_and_short_serviceid",
      "managed_by": "TAP"
    }
  },
  "spec": {
    "replicas": 3,
    "selector": {
      "matchLabels": {
        "component": "server",
        "service_id": "$service_id",
        "idx_and_short_serviceid": "$idx_and_short_serviceid"
      }
    },
    "serviceName": "$idx_and_short_serviceid-server",
    "affinity": {
      "podAntiAffinity": {
        "requiredDuringSchedulingIgnoredDuringExecution": [
          {
            "topologyKey": "kubernetes.io/hostname",
            "labelSelector": {
              "matchLabels": {
                "idx_and_short_serviceid": "$idx_and_short_serviceid",
                "component": "server"
              }
            }
          }
        ]
      }
    },
    "template": {
      "metadata": {
        "labels": {
          "component": "server",
          "service_id": "$service_id",
          "idx_and_short_serviceid": "$idx_and_short_serviceid",
          "managed_by": "TAP"
        }
      },
      "spec": {
        "initContainers": [
          {
            "name": "redis-server-init",
            "image": "18fgsa/redis-server-init:3.2.10",
            "volumeMounts": [
              {
                "name": "opt",
                "mountPath": "/opt"
              }
            ]
          }
        ],
        "containers": [
          {
            "resources": {
              "requests": {
                "memory": "384m"
              },
              "limits": {
                "memory": "512M"
              }
            },
            "args": [
              "/opt/redis.conf"
            ],
            "command": [
              "/opt/bin/k8s-redis-ha-server"
            ],
            "env": [
              {
                "name": "SERVICE",
                "value": "$idx_and_short_serviceid-server"
              },
              {
                "name": "SERVICE_PORT",
                "value": "redis-server"
              },
              {
                "name": "SENTINEL_HOST",
                "value": "$idx_and_short_serviceid-sentinel.default"
              },
              {
                "name": "SENTINEL",
                "value": "$service_id-sentinel"
              },
              {
                "name": "SENTINEL_PORT",
                "value": "redis-sentinel"
              },
              { "name": "MANAGED_BY", "value":"TAP" },
              { "name": "REDIS_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "$short_serviceid-redis-ha-credentials",
                    "key": "redis-password"
                  }
                }
              }
            ],
            "image": "redis:3.2.10",
            "imagePullPolicy": "IfNotPresent",
            "name": "redis-server",
            "lifecycle": {
              "preStop": {
                "exec": {
                  "command": [
                    "/opt/bin/pre-stop.sh"
                  ]
                }
              }
            },
            "ports": [
              {
                "containerPort": 6379,
                "name": "redis-server"
              }
            ],
            "readinessProbe": {
              "exec": {
                "command": [
                  "redis-cli",
                  "info",
                  "server"
                ]
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/data",
                "name": "data"
              },
              {
                "mountPath": "/opt",
                "name": "opt"
              }
            ]
          }
        ],
        "volumes": [
          {
            "emptyDir": {},
            "name": "opt"
          }
        ]
      }
    },
    "volumeClaimTemplates": [
      {
        "metadata": {
          "name": "data"
        },
        "spec": {
          "accessModes": ["ReadWriteOnce"],
          "storageClassName": "$storage_class",
          "resources": {
            "requests": {
              "storage": "10Gi"
            }
          }
        }
      }
    ]
  }
}
